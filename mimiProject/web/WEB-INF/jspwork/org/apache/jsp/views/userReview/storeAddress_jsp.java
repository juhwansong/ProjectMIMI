/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2018-08-21 05:26:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.userReview;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class storeAddress_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/views/userReview/../../nonHeaderHead.jsp", Long.valueOf(1534825070674L));
    _jspx_dependants.put("/views/userReview/../../end.jsp", Long.valueOf(1534825072454L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\r\n");
      out.write("<meta name=\"format-detection\" content=\"telephone=no\" />\r\n");
      out.write("<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\r\n");
      out.write("<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.2.0/css/all.css\" integrity=\"sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/mimi/resources/css/bootstrap.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/mimi/resources/js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/mimi/resources/css/admin-review-thema.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");

	String userId = (String)session.getAttribute("userId");
	String authority = (String)session.getAttribute("authority");
	String nickName = (String)session.getAttribute("nickName");

      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write(" \r\n");
      out.write("<!-- head.jsp에 header.jsp가 들어가 있기때문에 header.jsp가 미포함된 head.jsp추가  -->\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function getParentText(){\r\n");
      out.write("\tdocument.getElementById(\"store_name\").value = opener.document.getElementById(\"store_name\").value;\r\n");
      out.write("\tdocument.getElementById(\"store_phone\").value = opener.document.getElementById(\"store_phone\").value;\r\n");
      out.write("\tdocument.getElementById(\"store_address\").value = opener.document.getElementById(\"store_address\").value;\r\n");
      out.write(" });\r\n");
      out.write(" \r\n");
      out.write("function setParentText(){\r\n");
      out.write("\topener.document.getElementById(\"store_name\").value = document.getElementById(\"store_name\").value;\r\n");
      out.write("\topener.document.getElementById(\"store_phone\").value = document.getElementById(\"store_phone\").value;\r\n");
      out.write("\topener.document.getElementById(\"store_address\").value = document.getElementById(\"store_address\").value;\r\n");
      out.write("\tself.close()\r\n");
      out.write(" }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>상세 주소</title>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<h3>상세 주소</h3>\r\n");
      out.write("<hr style=\"width:1000px;\">\r\n");
      out.write("\t<div id=\"map_image\" class=\"text-center\" style=\"width:100%; height:500px; overflow:hidden;\">\r\n");
      out.write("\t\t<!-- 지도 -->\r\n");
      out.write("\t\t<img src=\"/mimi/resources/images/userReview/map.jpg\" width=100% height=100%>\r\n");
      out.write("\t</div>\r\n");
      out.write("<hr>\r\n");
      out.write("\t\t<form action=\"getParentText()\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"col-xs-6\">\r\n");
      out.write("\t\t\t\t\t<label for=\"store_name\">매장명</label> <input type=\"text\" class=\"form-control\" id=\"store_name\"  placeholder=\"미미 카페\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-xs-6\">\r\n");
      out.write("\t\t\t\t\t<label for=\"store_phone\">매장 연락처</label> <input type=\"tel\" class=\"form-control\" id=\"store_phone\" placeholder=\"02-123-4567\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<br><br><br><br>\r\n");
      out.write("\t\t\t\t<div class=\"col-xs-12\">\r\n");
      out.write("\t\t\t\t\t<label for=\"store_address\">매장 주소</label> <input type=\"text\" class=\"form-control\" id=\"store_address\" placeholder=\"주소 입력\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<div style=\"text-align:center;\">\r\n");
      out.write("\t\t\t<input type=\"button\" class=\"btn btn-default\" onclick=\"setParentText()\" value=\"확인\">\r\n");
      out.write("\t\t\t<input type=\"button\" class=\"btn btn-default\"\r\n");
      out.write("\t\t\t\tonClick='self.close()'\r\n");
      out.write("\t\t\t\tvalue=\"취소\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/mimi/resources/js/bootstrap.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/mimi/resources/js/kakao.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/clipboard.js/1.5.3/clipboard.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("<!-- 바디 태그 끝 -->\r\n");
      out.write("</html>\t");
      out.write(' ');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

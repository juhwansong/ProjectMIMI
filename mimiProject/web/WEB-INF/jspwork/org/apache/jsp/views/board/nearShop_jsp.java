/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2018-08-26 22:20:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class nearShop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/views/board/../../end.jsp", Long.valueOf(1535321505106L));
    _jspx_dependants.put("/views/board/../../footer.jsp", Long.valueOf(1533706592000L));
    _jspx_dependants.put("/views/board/../../adminHeader.jsp", Long.valueOf(1535317239344L));
    _jspx_dependants.put("/views/board/../../memberHeader.jsp", Long.valueOf(1535318197665L));
    _jspx_dependants.put("/views/board/../../head.jsp", Long.valueOf(1535321505081L));
    _jspx_dependants.put("/views/board/../../header.jsp", Long.valueOf(1535317239379L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\r\n");
      out.write("<meta name=\"format-detection\" content=\"telephone=no\" />\r\n");
      out.write("<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\r\n");
      out.write("<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.2.0/css/all.css\" integrity=\"sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/mimi/resources/css/bootstrap.css\">\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"/mimi/resources/js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/mimi/resources/css/admin-review-thema.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- 다음맵 인증키 (직접 발급받아야됨) -->\r\n");
      out.write("<script type = \"text/javascript\" src = \"//dapi.kakao.com/v2/maps/sdk.js?appkey=795b33c97453a44f73949c94f447f347&libraries=services,clusterer,drawing\"></script> \r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("<script src=\"//cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.4.0/clipboard.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/codemirror.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/theme/monokai.css\"> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/codemirror.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/mode/xml/xml.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/formatting.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/mimi/resources/summernote.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/mimi/resources/summernote.js\"></script> \r\n");
      out.write("<script type=\"text/javascript\" src=\"/mimi/resources/js/kakao.min.js\"></script> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type = \"text/css\" href = \"/mimi/resources/css/mapPage.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 바디 태그 시작 -->\r\n");
      out.write("\r\n");

	String userId = (String)session.getAttribute("userId");
	String authority = (String)session.getAttribute("authority");
	String nickName = (String)session.getAttribute("nickName");
	
	if(userId == null){

      out.write("\t\t\r\n");
      out.write("\t\t");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<title>MIMI</title>\r\n");
      out.write("<!-- 상단에 노출되서 주석처리.. <title>header</title> -->\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t\r\n");
      out.write("\tbody {\r\n");
      out.write("\t\tpadding-top: 120px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#mainNav > a{ \r\n");
      out.write("\t\tdisplay: inline-block; \r\n");
      out.write("\t} \r\n");
      out.write("\t\r\n");
      out.write("\t/*메뉴 묶음 박스*/\r\n");
      out.write("\t#mini-menu-box{\r\n");
      out.write("\t\tposition:absolute;\r\n");
      out.write("\t\ttop:26px;\r\n");
      out.write("\t\tright: 100px;\r\n");
      out.write("\t\twidth:50px;\r\n");
      out.write("\t\theight:50px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("/* \t\r\n");
      out.write("\t#mini-menu-box > div#menu-box-btn{\r\n");
      out.write("\t\tposition:absolute;\r\n");
      out.write("\t\ttop: 0px;\t\r\n");
      out.write("\t\tleft:0%;\r\n");
      out.write("\t\tfont-size: 50px;\r\n");
      out.write("\t\tcolor: #666;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write(" */\t\t\r\n");
      out.write(" \r\n");
      out.write(" \t/* 크기, 색상, 위치 수정 */\r\n");
      out.write("\t#mini-menu-box > div#menu-box-btn{\r\n");
      out.write("\t\tposition:absolute;\r\n");
      out.write("\t\ttop: 5px;\t\r\n");
      out.write("\t\tleft:10%;\r\n");
      out.write("\t\tfont-size: 40px;\r\n");
      out.write("\t\tcolor: #888;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/*비회원 메뉴 박스*/\r\n");
      out.write("\t.menu-box \r\n");
      out.write("\t{\r\n");
      out.write("\t\tdisplay : none;\r\n");
      out.write("\t\ttop: 58pt;\r\n");
      out.write("\t\tright:-25pt;\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\twidth: 260px;\r\n");
      out.write("\t\theight: 370px;\r\n");
      out.write("\t\tpadding: 10px;\r\n");
      out.write("\t\tbackground: white;\r\n");
      out.write("\t\t-webkit-border-radius: 0px;\r\n");
      out.write("\t\t-moz-border-radius: 0px;\r\n");
      out.write("\t\tborder-radius: 0px;\r\n");
      out.write("\t\tborder: #000000 solid 1px;\r\n");
      out.write("\t\tbox-shadow:0 5px 20px rgba(0, 0, 0, 0.8);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t.menu-box:after \r\n");
      out.write("\t{\r\n");
      out.write("\t\tcontent: '';\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\tborder-style: solid; \r\n");
      out.write("\t\tborder-width: 0 16px 20px;\r\n");
      out.write("\t\tborder-color: white transparent;\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\twidth: 0;\r\n");
      out.write("\t\tz-index: 1;\r\n");
      out.write("\t\ttop: -20px;\r\n");
      out.write("\t\tleft: 185px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t} \r\n");
      out.write("\r\n");
      out.write("\t.menu-box:before \r\n");
      out.write("\t{\r\n");
      out.write("\t\tcontent: '';\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\tborder-style: solid;\r\n");
      out.write("\t\tborder-width: 0 16px 20px;\r\n");
      out.write("\t\tborder-color: #000000 transparent;\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\twidth: 0;\r\n");
      out.write("\t\tz-index: 0;\r\n");
      out.write("\t\ttop: -21px;\r\n");
      out.write("\t\tleft: 185px;\r\n");
      out.write("\t\t \r\n");
      out.write("\t}   \r\n");
      out.write("\t\r\n");
      out.write("\t@media (max-width:390px){\r\n");
      out.write("\t\t#mini-menu-box{\r\n");
      out.write("\t\t\t/* display:relative; */\r\n");
      out.write("\t\t\tleft : 200px!important\r\n");
      out.write("\t\t}\r\n");
      out.write("\t} \r\n");
      out.write("\t@media (max-width:355px){\r\n");
      out.write("\t\t#song-navbar-toggle{\r\n");
      out.write("\t\t\tleft:90px;\r\n");
      out.write("\t\t\twidth:75px;\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t}\r\n");
      out.write("\t@media (max-width: 992px){\r\n");
      out.write("\t\t.mini-li-box{\r\n");
      out.write("\t\t\tdisplay: inline-block;\r\n");
      out.write("\t\t\tfloat: none;\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\t#bs-example-navbar-collapse-1{ /*헤더 네비 가운데 정렬*/\r\n");
      out.write("\t\t\ttext-align: center; \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t} \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.mini-li-box{\r\n");
      out.write("\t\tdisplay: inline-block;\r\n");
      out.write("\t\tfloat: none;\r\n");
      out.write("\t} \r\n");
      out.write("\t#bs-example-navbar-collapse-1{ /*헤더 네비 가운데 정렬*/\r\n");
      out.write("\t\ttext-align: center; \r\n");
      out.write("\t\t\r\n");
      out.write("\t} \r\n");
      out.write("\t\r\n");
      out.write("\t#menu-box-btn:hover {\r\n");
      out.write("\t\tcolor: #ccc!important;\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t@media (min-width: 993px){ \r\n");
      out.write("\t\t#bs-example-navbar-collapse-1{\r\n");
      out.write("\t\t\ttop:0px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- Navigation -->\r\n");
      out.write("    <nav id=\"mainNav\" class=\"navbar navbar-default navbar-fixed-top header-and-footer\">\r\n");
      out.write("        \r\n");
      out.write("        <a href=\"/mimi/index.jsp\"><img style=\"position: absolute; max-height:50px;max-width:200px; left:5%; top:24px; z-index: 1;\" src=\"/mimi/resources/images/logo/mm_logo_onlytext_red.svg\"></a>\r\n");
      out.write("        <div class=\"container\" style=\"position:relative; top:-10px;\">\r\n");
      out.write("            <!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("           \r\n");
      out.write("            <div class=\"navbar-header\">\r\n");
      out.write("            \r\n");
      out.write("                <button id=\"song-navbar-toggle\" type=\"button\"  class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\r\n");
      out.write("                    <span class=\"sr-only\">Toggle navigation</span> Menu <i class=\"fa fa-bars\"></i>\r\n");
      out.write("                </button>\r\n");
      out.write("                \r\n");
      out.write("                <div style=\"height:50px;width:0px;\"></div><!--세로 크기 줄어들지 않게 하기 위한 투명 박스 -->\r\n");
      out.write("            </div>\r\n");
      out.write("\t\r\n");
      out.write("            <!-- Collect the nav links, forms, and other content for toggling -->\r\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\" >\r\n");
      out.write("                <ul class=\"nav navbar-nav mini-li-box\">\r\n");
      out.write("                    <li class=\"hidden\">\r\n");
      out.write("                        <a href=\"#page-top\"></a>\r\n");
      out.write("                    </li> \r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/noticelist\">공지사항</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/adminboardlist\">MIMI 리뷰</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/bestboardlist\">Best리뷰</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/userboardlist\">유저리뷰</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/views/board/nearShop.jsp\">주변매장</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/views/member/customer.jsp\">고객센터</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/views/intro/information.jsp\">사이트소개</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- /.navbar-collapse -->\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- /.container-fluid -->\r\n");
      out.write("        <nav id=\"mini-menu-box\">\r\n");
      out.write("\t\t\t<div id=\"menu-box-btn\" class=\"far fa-user-circle\" aria-hidden=\"true\"></div>\r\n");
      out.write("\t\t\t<!-- 로그 아웃상태에서 메뉴 버튼 누를시 -->\r\n");
      out.write("\t\t\t<div class=\"menu-box\">\r\n");
      out.write("\t\t\t\t<h3 align=\"center\">로그인 및 회원가입</h3>\r\n");
      out.write("\t\t\t\t<hr style=\"border: thin 1px black;\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<form role=\"form\" >\r\n");
      out.write("            \t\t<div class=\"form-group\" align=\"center\">\r\n");
      out.write("              \t\t\t<input type=\"text\" class=\"form-control\" id=\"menu-userid\" name=\"menu-userid\" style=\"width:150pt;\" maxlength=\"20\" placeholder=\"아이디 입력\">\r\n");
      out.write("              \t\t</div>\r\n");
      out.write("              \t\t<div class=\"form-group\" align=\"center\">\t\r\n");
      out.write("              \t\t\t<input type=\"password\" class=\"form-control\" id=\"menu-userpassword\" name=\"menu-userpassword\" style=\"width:150pt;\" maxlength=\"20\" placeholder=\"비밀번호 입력\">\r\n");
      out.write("              \t\t</div>\t\r\n");
      out.write("              \t\t<div class=\"form-group\">\r\n");
      out.write("              \t\t\t<p class=\"help-block\" align=\"right\" style=\"color:#d9534f; font-size:12px;\"><a href=\"/mimi/views/member/idFindView.jsp\">아이디</a>&nbsp;/&nbsp;<a href=\"/mimi/views/member/passwordFindView.jsp\">비밀번호 찾기</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n");
      out.write("              \t\t</div>\r\n");
      out.write("              \t\t<div class=\"form-group\" align=\"center\">\t\r\n");
      out.write("              \t\t\t<button type=\"button\" id=\"login-btn\" class=\"btn btn-info\" style=\"width:80%; margin:0px; outline: none;\">로그인&nbsp;<i class=\"fa fa-check spaceLeft\"></i></button>\t\t\r\n");
      out.write("            \t\t</div>\t\r\n");
      out.write("            \t</form>\t\r\n");
      out.write("            \t<hr style=\"margin: 0px 1px 10px 1px;\">\t\t\r\n");
      out.write("            \t<div align=\"center\">\t\r\n");
      out.write("              \t\t<a href=\"/mimi/views/member/memberEnroll.jsp\"><button type=\"button\" class=\"btn btn-success\" style=\"width:80%; outline: none;\">회원가입&nbsp;<i class=\"fa fa-check spaceLeft\"></i></button></a>\t\t\r\n");
      out.write("            \t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t//미니 메뉴 관련 동작 (해당 메뉴를 제외한 위치를 클릭했을때 미니 메뉴 사라짐)\r\n");
      out.write("\t\t\t$(document).on(\"mouseover\", \"#menu-box-btn\", function(){\r\n");
      out.write("\t\t\t\t$(\"#menu-box-btn\").css(\"cursor\", \"pointer\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(document).on(\"click\", \"body\", function(event){\r\n");
      out.write("\t\t\t\tif($(\".menu-box\").css(\"display\") === \"none\"){\r\n");
      out.write("\t\t\t\t\tif($(event.target).is(\"#menu-box-btn,#menu-box-btn *\")){\r\n");
      out.write("\t\t\t\t\t\t$(\".menu-box\").slideDown(\"slow\", function() {\t\r\n");
      out.write("\t\t\t\t\t\t});\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse{\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(!$(event.target).is(\".menu-box,.menu-box *\")){\r\n");
      out.write("\t\t\t\t\t\t$(\".menu-box\").slideUp(\"slow\", function() {\t\r\n");
      out.write("\t\t\t\t\t\t});\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//로그인 ajax 이용(실패 했을때 바로 처리를 위해)\r\n");
      out.write("\t\t\t$(document).on(\"click\", \"#login-btn\", function(){\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t  \t       \t\turl : \"/mimi/memberlogin\",\r\n");
      out.write("\t  \t       \t\ttype : \"post\",\r\n");
      out.write("\t  \t          \tdata : {\r\n");
      out.write("\t  \t          \t\t\t\"userid\" : $(\"#menu-userid\").val(),\r\n");
      out.write("\t  \t          \t\t\t\"userpassword\" : $(\"#menu-userpassword\").val()\r\n");
      out.write("\t  \t          \t},\r\n");
      out.write("\t  \t          \tsuccess : function(data){\r\n");
      out.write("\t  \t      \r\n");
      out.write("\t  \t          \t\tif(data === \"success\"){  //아이디,비번 입력 성공시\r\n");
      out.write("\t  \t          \t\t\twindow.location = \"/mimi/index.jsp\";//현재 페이지 새로고침\r\n");
      out.write("\t  \t          \t\t}\r\n");
      out.write("\t  \t          \t\telse{\r\n");
      out.write("\t  \t          \t\t\talert(data);  //에러 메세지 화면에 보여주기\r\n");
      out.write("\t  \t          \t\t}\r\n");
      out.write("\t  \t        \t}                     \r\n");
      out.write("\t  \t  \t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\t\r\n");
      out.write("\t\r\n");
      out.write('\r');
      out.write('\n');
 		
	}
	else if(authority.equals("U")){

      out.write("\t\t\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>MIMI</title>\r\n");
      out.write("<!-- 상단에 노출되서 주석처리.. <title>memberHeader</title> -->\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t\r\n");
      out.write("\tbody {\r\n");
      out.write("\t\tpadding-top: 120px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.member-menu-box span, #mainNav > a { \r\n");
      out.write("\t\tdisplay: inline-block; \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/*메뉴 묶음 박스*/\r\n");
      out.write("\t#mini-menu-box{\r\n");
      out.write("\t\tposition:absolute;\r\n");
      out.write("\t\ttop:26px;\r\n");
      out.write("\t\tright: 100px;\r\n");
      out.write("\t\twidth:50px;\r\n");
      out.write("\t\theight:50px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("/* \t\r\n");
      out.write("\t#mini-menu-box > div#menu-box-btn{\r\n");
      out.write("\t\tposition:absolute;\r\n");
      out.write("\t\tcolor: #666;\r\n");
      out.write("\t\ttop:-4px; \r\n");
      out.write("\t\tleft:0%;\r\n");
      out.write("\t\topacity:0.5;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#menu-box-btn:hover {\r\n");
      out.write(" \t\topacity:1!important;\r\n");
      out.write(" \t\ttransition:all .6s linear;\r\n");
      out.write("\t} \r\n");
      out.write("*/\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t#mini-menu-box > div#menu-box-btn{\r\n");
      out.write("\t\tposition:absolute;\r\n");
      out.write("\t\ttop:-4px; \r\n");
      out.write("\t\tleft:0%;\r\n");
      out.write("\t\topacity:1;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#menu-box-btn:hover {\r\n");
      out.write("\t\t/* background:#000000; */\r\n");
      out.write("  \t\t/* 추가된 부분 */\r\n");
      out.write(" \t\topacity:0.6!important;\r\n");
      out.write(" \t\ttransition:all .2s linear;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/*회원 메뉴 박스*/\r\n");
      out.write("\t.member-menu-box \r\n");
      out.write("\t{\r\n");
      out.write("\t\tdisplay : none;\r\n");
      out.write("\t\ttop: 58pt;\r\n");
      out.write("\t\tright:-29pt;\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\twidth: 260px;\r\n");
      out.write("\t\theight: 350px;\r\n");
      out.write("\t\tpadding: 10px;\r\n");
      out.write("\t\tbackground: white;\r\n");
      out.write("\t\t-webkit-border-radius: 0px;\r\n");
      out.write("\t\t-moz-border-radius: 0px;\r\n");
      out.write("\t\tborder-radius: 0px;\r\n");
      out.write("\t\tborder: #000000 solid 1px;\r\n");
      out.write("\t\tbox-shadow:0 5px 20px rgba(0, 0, 0, 0.8);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t.member-menu-box:after \r\n");
      out.write("\t{\r\n");
      out.write("\t\tcontent: '';\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\tborder-style: solid; \r\n");
      out.write("\t\tborder-width: 0 16px 20px;\r\n");
      out.write("\t\tborder-color: white transparent;\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\twidth: 0;\r\n");
      out.write("\t\tz-index: 1;\r\n");
      out.write("\t\ttop: -20px;\r\n");
      out.write("\t\tleft: 185px;\r\n");
      out.write("\t} \r\n");
      out.write("\r\n");
      out.write("\t.member-menu-box:before \r\n");
      out.write("\t{\r\n");
      out.write("\t\tcontent: '';\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\tborder-style: solid;\r\n");
      out.write("\t\tborder-width: 0 16px 20px;\r\n");
      out.write("\t\tborder-color: #000000 transparent;\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\twidth: 0;\r\n");
      out.write("\t\tz-index: 0;\r\n");
      out.write("\t\ttop: -21px;\r\n");
      out.write("\t\tleft: 185px;\r\n");
      out.write("\t\t \r\n");
      out.write("\t}\r\n");
      out.write("\t@media (max-width:390px){\r\n");
      out.write("\t\t#mini-menu-box{\r\n");
      out.write("\t\t\t/* display:relative; */\r\n");
      out.write("\t\t\tleft : 200px!important\r\n");
      out.write("\t\t}\r\n");
      out.write("\t} \r\n");
      out.write("\t@media (max-width:355px){\r\n");
      out.write("\t\t#song-navbar-toggle{\r\n");
      out.write("\t\t\tleft:90px;\r\n");
      out.write("\t\t\twidth:75px;\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t@media (max-width: 992px){\r\n");
      out.write("\t\t.mini-li-box{\r\n");
      out.write("\t\t\tdisplay: inline-block;\r\n");
      out.write("\t\t\tfloat: none;\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\t#bs-example-navbar-collapse-1{ /*헤더 네비 가운데 정렬*/\r\n");
      out.write("\t\t\ttext-align: center; \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t} \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.mini-li-box{\r\n");
      out.write("\t\tdisplay: inline-block;\r\n");
      out.write("\t\tfloat: none;\r\n");
      out.write("\t} \r\n");
      out.write("\t#bs-example-navbar-collapse-1{ /*헤더 네비 가운데 정렬*/\r\n");
      out.write("\t\ttext-align: center; \r\n");
      out.write("\t\t\r\n");
      out.write("\t} \r\n");
      out.write("\t\r\n");
      out.write("\t@media (min-width: 993px){ \r\n");
      out.write("\t\t#bs-example-navbar-collapse-1{\r\n");
      out.write("\t\t\ttop:0px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Navigation -->\r\n");
      out.write("    <nav id=\"mainNav\" class=\"navbar navbar-default navbar-fixed-top header-and-footer\">\r\n");
      out.write("    \t\r\n");
      out.write("        <a href=\"/mimi/index.jsp\"><img style=\"position: absolute; max-height:50px;max-width:200px; left:5%; top:24px; z-index: 1;\" src=\"/mimi/resources/images/logo/mm_logo_onlytext_red.svg\"></a>\r\n");
      out.write("        <div class=\"container\" style=\"position:relative; top:-10px;\">\r\n");
      out.write("            <!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"navbar-header\">\t\r\n");
      out.write("            \t\r\n");
      out.write("                <button id=\"song-navbar-toggle\" type=\"button\"  class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\r\n");
      out.write("                    <span class=\"sr-only\">Toggle navigation</span> Menu <i class=\"fa fa-bars\"></i>\r\n");
      out.write("                </button>\r\n");
      out.write("                \r\n");
      out.write("                <div style=\"height:50px;width:0px;\"></div><!--세로 크기 줄어들지 않게 하기 위한 투명 박스 -->\r\n");
      out.write("            </div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("            <!-- Collect the nav links, forms, and other content for toggling -->\r\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\" >\r\n");
      out.write("                <ul class=\"nav navbar-nav mini-li-box\">\r\n");
      out.write("                    <li class=\"hidden\">\r\n");
      out.write("                        <a href=\"#page-top\"></a>\r\n");
      out.write("                    </li> \r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/noticelist\">공지사항</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/adminboardlist\">MIMI 리뷰</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/bestboardlist\">Best리뷰</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/userboardlist\">유저리뷰</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/views/board/nearShop.jsp\">주변매장</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/views/member/customer.jsp\">고객센터</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"/mimi/views/intro/information.jsp\">사이트소개</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- /.navbar-collapse -->\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- /.container-fluid -->\r\n");
      out.write("        <nav id=\"mini-menu-box\">\r\n");
      out.write("\t\t\t<!-- <div id=\"menu-box-btn\" class=\"fas fa-user-circle\" aria-hidden=\"true\"></div> -->\r\n");
      out.write("\t\t\t<div id=\"menu-box-btn\"  aria-hidden=\"true\"><img id=\"menu-gradeimg\" src=\"\"  width=\"60px\" ></img></div>\r\n");
      out.write("\t\t\t<!-- 회원 로그인 상태에서 메뉴 버튼 누를시 -->\r\n");
      out.write("\t\t\t<div class=\"member-menu-box\">\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t<p id=\"menu-gradename\" align=\"center\" style=\"margin:0px;font-size:7pt;\"></p>\r\n");
      out.write("\t\t\t\t\t<p id=\"menu-nickname\" align=\"center\" style=\"margin:0px;\"></p>\r\n");
      out.write("\t\t\t\t\t<p id=\"menu-userid\" align=\"center\" style=\"font-size:7pt;\">");
      out.print((String)session.getAttribute("userId"));
      out.write("</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div align=\"center\">\r\n");
      out.write("\t\t\t\t\t<a href=\"/mimi/memberlogout\">로그아웃</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<hr style=\"border: thin 1px black;\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<div style=\"padding-top:20px;\" align=\"center\">\t\r\n");
      out.write("\t\t\t\t\t<span style=\"width:100px;\">\t\r\n");
      out.write("\t\t\t\t\t\t<!-- <a href=\"/mimi/views/board/myContent.jsp\"> -->\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/mimi/myboardlist?nickname=70억&user=user04\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p style=\"font-size:25pt;\" class=\"far fa-file-alt\" aria-hidden=\"true\"></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>작성한 글</p>\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</span>\t\t\t\r\n");
      out.write("\t\t\t\t\t<span style=\"width:100px;\">\t\r\n");
      out.write("\t\t\t\t\t\t<!-- <a href=\"/mimi/views/board/myComment.jsp\"> -->\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/mimi/mycommentlist?nickname=NICKNAME&user=유저\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p style=\"font-size:25pt;\" class=\"far fa-comments\" aria-hidden=\"true\"></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>작성한 댓글</p>\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<div style=\"padding-top:20px;\" align=\"center\">\t\r\n");
      out.write("\t\t\t\t\t<span style=\"width:100px;\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/mimi/bookmarklist\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p style=\"font-size:25pt;\" class=\"fas fa-map-marker-alt\" aria-hidden=\"true\"></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>즐겨찾기</p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t<span style=\"width:100px;\">\t\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/mimi/views/member/passwordConfirmView.jsp\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p style=\"font-size:25pt;\" class=\"fas fa-user\" aria-hidden=\"true\"></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>내 정보</p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t</div>  \r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t//화면 로딩 시 바로 ajax 통해서 회원 닉네임, 등급이름 가져온다.\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t      \t\turl : \"/mimi/membermenuinfo\",\r\n");
      out.write("\t      \t\ttype : \"post\",\r\n");
      out.write("\t      \t\tsuccess : function(data){\r\n");
      out.write("\t      \t\t\tvar json = data;\n");
      out.write("\t      \t\t\tjson.gradeName = decodeURI(json.gradeName);  \t\t\t\r\n");
      out.write("\t      \t\t\t$(\"#menu-gradename\").html(json.gradeName);\r\n");
      out.write("\t      \t\t\t$(\"#menu-nickname\").html(decodeURI(json.nickName));\r\n");
      out.write("\t      \t\t\tif(json.gradeName === \"손님\"){\r\n");
      out.write("\t      \t\t\t\t$(\"#menu-gradeimg\").attr(\"src\", \"/mimi/resources/images/icon/icon_level1.png\");\r\n");
      out.write("\t      \t\t\t}\r\n");
      out.write("\t      \t\t\telse if(json.gradeName === \"종업원\"){\r\n");
      out.write("\t      \t\t\t\t$(\"#menu-gradeimg\").attr(\"src\", \"/mimi/resources/images/icon/icon_level1.png\");\r\n");
      out.write("\t      \t\t\t}\r\n");
      out.write("\t      \t\t\telse if(json.gradeName === \"주방보조\"){\r\n");
      out.write("\t      \t\t\t\t$(\"#menu-gradeimg\").attr(\"src\", \"/mimi/resources/images/icon/icon_level2.png\");\r\n");
      out.write("\t      \t\t\t}\r\n");
      out.write("\t      \t\t\telse if(json.gradeName === \"주방장\"){\r\n");
      out.write("\t      \t\t\t\t$(\"#menu-gradeimg\").attr(\"src\", \"/mimi/resources/images/icon/icon_level3.png\");\r\n");
      out.write("\t      \t\t\t}\r\n");
      out.write("\t      \t\t\telse if(json.gradeName === \"식신\"){\r\n");
      out.write("\t      \t\t\t\t$(\"#menu-gradeimg\").attr(\"src\", \"/mimi/resources/images/icon/icon_level4.png\");\r\n");
      out.write("\t      \t\t\t}\r\n");
      out.write("\t      \t\t\t\r\n");
      out.write("\n");
      out.write("\t      \t\t\r\n");
      out.write("\n");
      out.write("\t      \t\t}\r\n");
      out.write("\t      \t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(document).on(\"mouseover\", \"#menu-box-btn\", function(){\r\n");
      out.write("\t\t\t\t$(\"#menu-box-btn\").css(\"cursor\", \"pointer\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(document).on(\"click\", \"body\", function(event){  //미니 메뉴 박스 이외의 지역 클릭시 미니 메뉴 사라지고, 메뉴 버튼 누르면 미니 메뉴 나타남\r\n");
      out.write("\n");
      out.write("\t\t\t\tif($(\".member-menu-box\").css(\"display\") === \"none\"){\r\n");
      out.write("\t\t\t\t\tif($(event.target).is(\"#menu-box-btn,#menu-box-btn *\")){\r\n");
      out.write("\t\t\t\t\t\t$(\".member-menu-box\").slideDown(\"slow\", function() {\t\r\n");
      out.write("\t\t\t\t\t\t});\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse{\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(!$(event.target).is(\".member-menu-box,.member-menu-box *\")){\r\n");
      out.write("\t\t\t\t\t\t$(\".member-menu-box\").slideUp(\"slow\", function() {\t\r\n");
      out.write("\t\t\t\t\t\t});\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\t\r\n");
      out.write("\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
	
	}
	else if(authority.equals("A")){

      out.write("\t\t\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>MIMI</title>\r\n");
      out.write("<!-- <title>adminHeader</title> -->\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t\r\n");
      out.write("\tbody {\r\n");
      out.write("\t\tpadding-top: 120px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.admin-menu-box span, #mainNav > a  { \r\n");
      out.write("\t\tdisplay: inline-block; \r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/*메뉴 묶음 박스*/\r\n");
      out.write("\t#mini-menu-box{\r\n");
      out.write("\t\tposition:absolute;\r\n");
      out.write("\t\ttop:26px;\r\n");
      out.write("\t\tright: 100px;\r\n");
      out.write("\t\twidth:50px;\r\n");
      out.write("\t\theight:50px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("/* \t#mini-menu-box > div#menu-box-btn{\r\n");
      out.write("\t\tposition:absolute;\r\n");
      out.write("\t\ttop: 0px;\t\r\n");
      out.write("\t\tleft:0%;\r\n");
      out.write("\t\tfont-size: 50px;\r\n");
      out.write("\t\tcolor: #666;\r\n");
      out.write("\t} */\r\n");
      out.write("\t\r\n");
      out.write("\t/* 크기, 위치, 색상 수정 */\r\n");
      out.write("\t#mini-menu-box > div#menu-box-btn{\r\n");
      out.write("\t\tposition:absolute;\r\n");
      out.write("\t\ttop: 8px;\t\r\n");
      out.write("\t\tleft:15%;\r\n");
      out.write("\t\tfont-size: 35px;\r\n");
      out.write("\t\tcolor: #888;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/*관리자 메뉴 박스*/\r\n");
      out.write("\t.admin-menu-box \r\n");
      out.write("\t{\r\n");
      out.write("\t\tdisplay : none;\r\n");
      out.write("\t\ttop: 58pt;\r\n");
      out.write("\t\tright:-29pt;\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\twidth: 260px;\r\n");
      out.write("\t\theight: 350px;\r\n");
      out.write("\t\tpadding: 10px;\r\n");
      out.write("\t\tbackground: white;\r\n");
      out.write("\t\t-webkit-border-radius: 0px;\r\n");
      out.write("\t\t-moz-border-radius: 0px;\r\n");
      out.write("\t\tborder-radius: 0px;\r\n");
      out.write("\t\tborder: #000000 solid 1px;\r\n");
      out.write("\t\tbox-shadow:0 5px 20px rgba(0, 0, 0, 0.8);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t.admin-menu-box:after \r\n");
      out.write("\t{\r\n");
      out.write("\t\tcontent: '';\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\tborder-style: solid; \r\n");
      out.write("\t\tborder-width: 0 16px 20px;\r\n");
      out.write("\t\tborder-color: white transparent;\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\twidth: 0;\r\n");
      out.write("\t\tz-index: 1;\r\n");
      out.write("\t\ttop: -20px;\r\n");
      out.write("\t\tleft: 185px;\r\n");
      out.write("\t} \r\n");
      out.write("\r\n");
      out.write("\t.admin-menu-box:before \r\n");
      out.write("\t{\r\n");
      out.write("\t\tcontent: '';\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\tborder-style: solid;\r\n");
      out.write("\t\tborder-width: 0 16px 20px;\r\n");
      out.write("\t\tborder-color: #000000 transparent;\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\twidth: 0;\r\n");
      out.write("\t\tz-index: 0;\r\n");
      out.write("\t\ttop: -21px;\r\n");
      out.write("\t\tleft: 185px;\r\n");
      out.write("\t\t \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t@media (max-width:390px){\r\n");
      out.write("\t\t#mini-menu-box{\r\n");
      out.write("\t\t\t/* display:relative; */\r\n");
      out.write("\t\t\tleft : 200px!important\r\n");
      out.write("\t\t}\r\n");
      out.write("\t} \r\n");
      out.write("\t@media (max-width:355px){\r\n");
      out.write("\t\t#song-navbar-toggle{\r\n");
      out.write("\t\t\tleft:90px;\r\n");
      out.write("\t\t\twidth:75px;\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t@media (max-width: 992px){\r\n");
      out.write("\t\t.mini-li-box{\r\n");
      out.write("\t\t\tdisplay: inline-block;\r\n");
      out.write("\t\t\tfloat: none;\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\t#bs-example-navbar-collapse-1{ /*헤더 네비 가운데 정렬*/\r\n");
      out.write("\t\t\ttext-align: center; \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t} \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.mini-li-box{\r\n");
      out.write("\t\tdisplay: inline-block;\r\n");
      out.write("\t\tfloat: none;\r\n");
      out.write("\t} \r\n");
      out.write("\t#bs-example-navbar-collapse-1{ /*헤더 네비 가운데 정렬*/\r\n");
      out.write("\t\ttext-align: center; \r\n");
      out.write("\t\t\r\n");
      out.write("\t} \r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t#menu-box-btn:hover {\r\n");
      out.write("\t\tcolor: #ccc!important;\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t@media (min-width: 993px){ \r\n");
      out.write("\t\t#bs-example-navbar-collapse-1{\r\n");
      out.write("\t\t\ttop:0px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Navigation -->\r\n");
      out.write("    <nav id=\"mainNav\" class=\"navbar navbar-default navbar-fixed-top header-and-footer\">\r\n");
      out.write("        \r\n");
      out.write("        <a href=\"/mimi/index.jsp\"><img style=\"position: absolute; max-height:50px;max-width:200px; left:5%; top:24px; z-index: 1;\" src=\"/mimi/resources/images/logo/mm_logo_onlytext_red.svg\"></a>\r\n");
      out.write("        <div class=\"container\" style=\"position:relative; top:-10px;\">\r\n");
      out.write("            <!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("            <div class=\"navbar-header\">\r\n");
      out.write("                <button id=\"song-navbar-toggle\" type=\"button\"  class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\r\n");
      out.write("                    <span class=\"sr-only\">Toggle navigation</span> Menu <i class=\"fa fa-bars\"></i>\r\n");
      out.write("                </button>\r\n");
      out.write("                \r\n");
      out.write("                <div style=\"height:50px;width:0px;\"></div><!--세로 크기 줄어들지 않게 하기 위한 투명 박스 -->\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Collect the nav links, forms, and other content for toggling -->\r\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n");
      out.write("                <ul class=\"nav navbar-nav mini-li-box\">\r\n");
      out.write("                    <li class=\"hidden\">\r\n");
      out.write("                        <a href=\"#page-top\"></a>\r\n");
      out.write("                    </li> \r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a  href=\"/mimi/noticelist\">공지사항</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a  href=\"/mimi/adminboardlist\">MIMI 리뷰</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a  href=\"/mimi/bestboardlist\">Best리뷰</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a  href=\"/mimi/userboardlist\">유저리뷰</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a  href=\"/mimi/views/board/nearShop.jsp\">주변매장</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a  href=\"/mimi/views/member/customer.jsp\">고객센터</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a  href=\"/mimi/views/intro/information.jsp\">사이트소개</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                     <li>\r\n");
      out.write("                        <a href=\"/mimi/testlist\">테스트페이지</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- /.navbar-collapse -->\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- /.container-fluid -->\r\n");
      out.write("        <nav id=\"mini-menu-box\">\r\n");
      out.write("\t\t\t<div id=\"menu-box-btn\" class=\"fas fa-cogs\" aria-hidden=\"true\"></div>\r\n");
      out.write("\t\t\t<!-- 관리자 로그인 상태에서 메뉴 버튼 누를시 -->\r\n");
      out.write("\t\t\t<div class=\"admin-menu-box\">\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t<p id=\"menu-gradename\" align=\"center\" style=\"margin:0px;font-size:7pt;\"></p>\r\n");
      out.write("\t\t\t\t\t<p id=\"menu-nickname\" align=\"center\" style=\"margin:0px;\"></p>\r\n");
      out.write("\t\t\t\t\t<p id=\"menu-userid\" align=\"center\" style=\"font-size:7pt;\">");
      out.print(session.getAttribute("userId") );
      out.write("</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div align=\"center\">\r\n");
      out.write("\t\t\t\t\t<a href=\"/mimi/memberlogout\">로그아웃</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<hr style=\"border: thin 1px black;\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<div style=\"padding-top:20px;\" align=\"center\">\t\r\n");
      out.write("\t\t\t\t\t<span style=\"width:100px;\">\t\r\n");
      out.write("\t\t\t\t\t\t<!-- <a href=\"/mimi/views/board/myContent.jsp\"> -->\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/mimi/myboardlist?nickname=NICKNAME&user=관리자\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p style=\"font-size:25pt;\" class=\"far fa-file-alt\" aria-hidden=\"true\"></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>작성한 글</p>\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</span>\t\t\t\r\n");
      out.write("\t\t\t\t\t<span style=\"width:100px;\">\t\r\n");
      out.write("\t\t\t\t\t\t<!-- <a href=\"/mimi/views/board/myComment.jsp\"> -->\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/mimi/mycommentlist?nickname=NICKNAME&user=관리자\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p style=\"font-size:25pt;\" class=\"far fa-comments\" aria-hidden=\"true\"></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>작성한 댓글</p>\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<div style=\"padding-top:20px;\" align=\"center\">\t\r\n");
      out.write("\t\t\t\t\t<span style=\"width:100px;\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/mimi/bookmarklist\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p style=\"font-size:25pt;\" class=\"fas fa-map-marker-alt\" aria-hidden=\"true\"></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>즐겨찾기</p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t<span style=\"width:100px;\">\t\r\n");
      out.write("\t\t\t\t\t\t<a href=\"/mimi/views/admin/adminPage.jsp\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p style=\"font-size:25pt;\" class=\"fas fa-cog\" aria-hidden=\"true\"></p>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p>관리자페이지</p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t</div>  \r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("    </nav>\r\n");
      out.write("   \r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t//화면 로딩 시 바로 ajax 통해서 회원 닉네임, 등급이름 가져온다.\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t      \t\turl : \"/mimi/membermenuinfo\",\r\n");
      out.write("\t      \t\ttype : \"post\",\r\n");
      out.write("\t      \t\tsuccess : function(data){\r\n");
      out.write("\t      \t\t\tvar json = data;\r\n");
      out.write("\t      \t\t\t$(\"#menu-gradename\").html(decodeURI(json.gradeName));\r\n");
      out.write("\t      \t\t\t$(\"#menu-nickname\").html(decodeURI(json.nickName));\r\n");
      out.write("\t      \t\t}\r\n");
      out.write("\t      \t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(document).on(\"mouseover\", \"#menu-box-btn\", function(){\r\n");
      out.write("\t\t\t\t$(\"#menu-box-btn\").css(\"cursor\", \"pointer\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(document).on(\"click\", \"body\", function(event){\r\n");
      out.write("\t\t\t\tif($(\".admin-menu-box\").css(\"display\") === \"none\"){\r\n");
      out.write("\t\t\t\t\tif($(event.target).is(\"#menu-box-btn,#menu-box-btn *\")){\r\n");
      out.write("\t\t\t\t\t\t$(\".admin-menu-box\").slideDown(\"slow\", function() {\t\r\n");
      out.write("\t\t\t\t\t\t});\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse{\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(!$(event.target).is(\".admin-menu-box,.admin-menu-box *\")){\r\n");
      out.write("\t\t\t\t\t\t$(\".admin-menu-box\").slideUp(\"slow\", function() {\t\r\n");
      out.write("\t\t\t\t\t\t});\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>");
      out.write('\r');
      out.write('\n');
		
	}

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 추가 -->\r\n");
      out.write("\r\n");
      out.write("<title>MIMI</title>\r\n");
      out.write("\r\n");
      out.write("<!-- 커스텀 오버레이 꾸미기 -->\r\n");
      out.write("<style>  \r\n");
      out.write("\t.wrap {opacity:1;position: absolute;left: 0;bottom: 40px;width: 288px;height: 132px;margin-left: -144px;text-align: left;overflow: hidden;font-size: 12px;font-family: 'Malgun Gothic', dotum, '돋움', sans-serif;line-height: 1.5;}\r\n");
      out.write("    .wrap * {padding: 0;margin: 0;}\r\n");
      out.write("    .wrap .infowin {width: 286px;height: 120px;border-radius: 5px;border-bottom: 2px solid #ccc;border-right: 1px solid #ccc;overflow: hidden;background: #fff;}\r\n");
      out.write("    .wrap .infowin:nth-child(1) {border: 0;box-shadow: 0px 1px 2px #888;}\r\n");
      out.write("    .infowin .title {padding: 1px 0 0 10px;height: 30px;background: #2b2d36;color:white;border-bottom: 1px solid #ddd;font-size: 18px;font-weight: bold;}\r\n");
      out.write("    .infowin .body {position: relative;overflow: hidden; }\r\n");
      out.write("    .infowin .desc {position: relative;margin: 13px 0 0 90px;height: 75px;}\r\n");
      out.write("    .desc .ellipsis {overflow: hidden;text-overflow: ellipsis;white-space: nowrap; position:relative; top:-4px;left:0px; margin-right: 2px; font-size: 16px; font-weight:bold;color:#666;}\r\n");
      out.write("    .desc .jibun {font-size: 11px;color: #888;margin-top: -2px;}\r\n");
      out.write("    .infowin .img {position: absolute;top: 10px;left: 5px;width: 73px;height: 71px;border: 1px solid #ddd;color: #888;overflow: hidden;}\r\n");
      out.write("    .infowin:after {content: '';position: absolute;margin-left: -12px;left: 50%;bottom: 0;width: 22px;height: 12px;background: url('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/vertex_white.png')}\r\n");
      out.write("    .infowin .link {color: #5085BB;}\r\n");
      out.write("    /* .wrap:after \r\n");
      out.write("\t{\r\n");
      out.write("\t\tcontent: '';\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\tborder-style: solid;\t\r\n");
      out.write("\t\tmargin-left: -12px;\r\n");
      out.write("\t\tleft : 50%;\r\n");
      out.write("\t\tborder-width: 15px 13px 0;\r\n");
      out.write("\t\tborder-color: #2b2d36 transparent;\r\n");
      out.write("\t\topacity:0.9;\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\twidth: 22px;\r\n");
      out.write("\t\theight: 12px;\r\n");
      out.write("\t\tz-index: 1;\r\n");
      out.write("\t\tbottom: 7px;\r\n");
      out.write("\t\tleft: 143px;\r\n");
      out.write("\t} */\r\n");
      out.write("\t.imgcontents-box {\r\n");
      out.write("\t    /* Over flow hidden hides the text if it is more than N lines  */\r\n");
      out.write("\t    overflow: hidden;\r\n");
      out.write("\t    /* To set '...' in absolute position */\r\n");
      out.write("\t    position: relative; \r\n");
      out.write("\t    color:#666;\r\n");
      out.write("\t    /* Use this value to count block height */\r\n");
      out.write("\t    height:50px;\r\n");
      out.write("\t    white-space: normal;\r\n");
      out.write("    \tword-break:break-all;\r\n");
      out.write("\t    line-height: 1.2em;\r\n");
      out.write("\t    /* Max-height = line-height (1.2) * lines max number (2) */\r\n");
      out.write("\t    max-height: 3.6em; \r\n");
      out.write("\t    /* If the last visible word doesn't adjoin right side then this will fix the problem */\r\n");
      out.write("\t    text-align: justify !important;  \r\n");
      out.write("\t    /* place for '...' */\r\n");
      out.write("\t    padding-right: 20px;\r\n");
      out.write("\t    padding-left: 0px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* create the ... */\r\n");
      out.write("    .imgcontents-box:before {\r\n");
      out.write("\t    /* points in the end */\r\n");
      out.write("\t    content: '...';\r\n");
      out.write("\t    /* absolute position */\r\n");
      out.write("\t    position: absolute;\r\n");
      out.write("\t    /* set position to right bottom corner of block */\r\n");
      out.write("\t    right: 13px;\r\n");
      out.write("\t    bottom: 0;\r\n");
      out.write("    }\r\n");
      out.write("    /* hide ... if we have text, which is less than or equal to max lines */\r\n");
      out.write("    .imgcontents-box:after {\r\n");
      out.write("\t    /* points in the end */\r\n");
      out.write("\t    content: '';\r\n");
      out.write("\t    /* absolute position */\r\n");
      out.write("\t    position: absolute;\r\n");
      out.write("\t    /* set position to right bottom corner of text */\r\n");
      out.write("\t    right: 0px;\r\n");
      out.write("\t    /* set width and height */\r\n");
      out.write("\t    width: 50px;\r\n");
      out.write("\t    height: 50px;\r\n");
      out.write("\t    margin-top: 0px;\r\n");
      out.write("\t    /* bg color = bg color under block */\r\n");
      out.write("\t    background: white;\r\n");
      out.write("    }\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\" style=\"width:1150px;\">\r\n");
      out.write("\t<table width=\"100%\" border=\"0\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td><h3>내 주변 매장</h3></td>\r\n");
      out.write("\t\t\t<td style=\"text-align: right; vertical-align:bottom; color:#777\">\r\n");
      out.write("\t\t\t<h6 >현재 위치 정보&nbsp;:&nbsp;<label id=\"currentposition\">현재위치 검색중입니다...</label><!-- 위치정보 --></h6></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<hr style=\"margin: 0px;\">\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t<!-------------              API               ------------->\t\r\n");
      out.write("\t<h3 align=\"center\">MAP</h3>\r\n");
      out.write("\t\t<div class=\"map_wrap\">\r\n");
      out.write("\t    \t<div id=\"map\" style=\"width:100%;height:100%;position:relative;overflow:hidden;\"></div>\r\n");
      out.write("\t    \t<div id=\"menu_wrap\" class=\"bg_white\">\r\n");
      out.write("\t        \t<div class=\"option\">\r\n");
      out.write("\t        \t</div>\r\n");
      out.write("\t        \t<ul id=\"placesList\"></ul>\r\n");
      out.write("\t        \t<div id=\"pagination\"></div>\r\n");
      out.write("\t    \t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t<hr style=\"margin: 0px;\">\r\n");
      out.write("\t<h6 style=\"text-align: right; color:#999\">사진 클릭 시 해당 리뷰 상세보기 페이지로 이동합니다.</h6><br>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\tvar lat = 37.566826;\r\n");
      out.write("\tvar lon = 126.9786567;\r\n");
      out.write("\tvar geocoder = new daum.maps.services.Geocoder(); //주소-좌표 변환 객체 생성\r\n");
      out.write("\tvar markers = [];\r\n");
      out.write("\tvar mapContainer = document.getElementById('map'); //지도 표시할 div\r\n");
      out.write("\tvar mapOption = {\r\n");
      out.write("\t\tcenter: new daum.maps.LatLng(lat, lon), // 지도의 중심좌표\r\n");
      out.write("\t\tlevel: 3 // 지도의 확대 레벨\r\n");
      out.write("\t}; \r\n");
      out.write("\t// 지도를 생성합니다    \r\n");
      out.write("\tvar map = new daum.maps.Map(mapContainer, mapOption);\r\n");
      out.write("\tvar placelistclicked = -1; //초기값 -1\t\r\n");
      out.write("\t//인포윈도우에 장소명을 표시합니다\r\n");
      out.write("\tvar infowindow = new Array();\r\n");
      out.write("\tvar page = null;\r\n");
      out.write("\tif(navigator.geolocation){\r\n");
      out.write("\t\tnavigator.geolocation.getCurrentPosition(function(position) {\r\n");
      out.write("\t        \r\n");
      out.write("\t        lat = position.coords.latitude, // 위도\r\n");
      out.write("\t        lon = position.coords.longitude; // 경도\r\n");
      out.write("\t      \t\r\n");
      out.write("\t        //지정한 좌표로 주소를 검색해서 inputbox에 표시\r\n");
      out.write("\t        searchAddrFromCoords(position.coords, displayCenterInfo);\r\n");
      out.write("\t        \r\n");
      out.write("\t        locPosition = new daum.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\r\n");
      out.write("\t     \t//현재 위치 표시\r\n");
      out.write("\t    \tmap.setCenter(locPosition);\r\n");
      out.write("\t        \r\n");
      out.write("\t        loadPlaces(lat, lon);\r\n");
      out.write("\t    }, function(error){\r\n");
      out.write("\t    \tvar errorTypes = \r\n");
      out.write("\t    \t{\r\n");
      out.write("\t    \t\t0: \"알려지지 않은 에러입니다\",\r\n");
      out.write("\t    \t\t1: \"회원님이 권한을 거부하셨습니다.\",\r\n");
      out.write("\t    \t\t2: \"위치를 찾을 수 없습니다\",\r\n");
      out.write("\t    \t\t3: \"요청 응답 시간이 초과되었습니다.\"\r\n");
      out.write("\t    \t};\r\n");
      out.write("\t    \tvar errormsg = errorTypes[error.code];\r\n");
      out.write("\t    \tif(error.code==0 || error.code == 2){\r\n");
      out.write("\t    \t\terrormsg = errormsg + \" : \" + error.message;\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    \talert(errormsg);\r\n");
      out.write("\t    \t$(\"#currentposition\").html(\"현재 위치를 찾지 못했습니다.\");\r\n");
      out.write("\t    });\t\r\n");
      out.write("\t}\r\n");
      out.write("\telse{// HTML5의 GeoLocation을 사용할 수 없을때\r\n");
      out.write("\t\tlat = 33.450701;\r\n");
      out.write("\t\tlon = 126.570667;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlocPosition = new daum.maps.LatLng(lat, lon),    \r\n");
      out.write("\t  \t//현재 위치 표시\r\n");
      out.write("\t\tmap.setCenter(locPosition);//맵 중심좌표 설정\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction loadPlaces(lat, lon){\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t     \t\turl : \"/mimi/nearshoplist\",\r\n");
      out.write("\t     \t\ttype : \"post\",\r\n");
      out.write("\t        \tdata : \r\n");
      out.write("\t        \t{\r\n");
      out.write("\t        \t\t\"latitude\" : lat,\r\n");
      out.write("\t        \t\t\"longitude\" : lon\r\n");
      out.write("\t        \t},\r\n");
      out.write("\t        \tsuccess : function(data){\t      \t\t\r\n");
      out.write("\t          \tif(data.list !== undefined){ //결과들을 마커로 생성하기\r\n");
      out.write("\t          \t\tconsole.log(data.list);\r\n");
      out.write("\t          \t\tfor(var i=0; i<data.list.length; i++){\r\n");
      out.write("\t          \t\t\tdata.list[i].place_name = decodeURIComponent(data.list[i].place_name);\t          \t\t\t\t          \t\t\t\r\n");
      out.write("\t          \t\t\tdata.list[i].address_name = decodeURIComponent(data.list[i].address_name);\t          \t\t\t\t          \t\t\t\t          \t\t\t\r\n");
      out.write("\t          \t\t\tdata.list[i].title = decodeURIComponent(data.list[i].title);\t          \t\t\t          \r\n");
      out.write("\t          \t\t\tdata.list[i].contents = decodeURIComponent(data.list[i].contents);\r\n");
      out.write("\t          \t\t\tdata.list[i].thumbnail_name = decodeURIComponent(data.list[i].thumbnail_name);\r\n");
      out.write("\t          \t\t}\r\n");
      out.write("\t   \t\t\t\t        \t\t \r\n");
      out.write("\t          \t\t//페이지 번호를 표출합니다\r\n");
      out.write("\t          \t\tpage = new pagination(data.list, data.list.length);\r\n");
      out.write("\t          \t\tvar min = 0;\r\n");
      out.write("\t          \t\tvar max = 9;\r\n");
      out.write("\t          \t\tif(data.list.length < max){\r\n");
      out.write("\t          \t\t\tmax = data.list.length;\r\n");
      out.write("\t          \t\t}\r\n");
      out.write("\t          \t\tdisplayPlaces(data.list.slice(min, max+1)); //처음에 보여줄땐 바로 1페이지 목록 보이게\r\n");
      out.write("\t          \t\t\r\n");
      out.write("\t          \t\t//검색시  자동으로 1번 마커를 표시\r\n");
      out.write("\t                daum.maps.event.trigger(markers[0], \"click\"); //강제로 클릭 발생\r\n");
      out.write("\t                displayInfowindow(markers[0], data.list[0].place_name, data.list[0].boardNo, data.list[0].thumbnail_name, data.list[0].title, data.list[0].contents, 0);   //처음엔 인포창 생성해야 함 (mouseover 이벤트로 발생되는게 아니기 때문에)\r\n");
      out.write("\t          \t\t\r\n");
      out.write("\t          \t\tdisplayPagination(page);\r\n");
      out.write("\t          \t\r\n");
      out.write("\t          \t}\r\n");
      out.write("\t          \telse{ //해당 반경의 거리에 값이 없을때    \r\n");
      out.write("\t          \t\talert(\"10km 반경으로 맛집이 존재하지 않습니다.\")\r\n");
      out.write("\t          \t}\r\n");
      out.write("\t      \t}                     \r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\tclass pagination{  //디비에 있는 정보를 뽑아서 보여주기위해 직접 페이지네이션 객체 선언\r\n");
      out.write("\t\tconstructor(data, length){\r\n");
      out.write("\t\t\tthis.list = data;\r\n");
      out.write("\t\t\tthis.current = 1;\r\n");
      out.write("\t\t\tthis.last = parseInt(length / 10);\r\n");
      out.write("\t\t\tif(length % 10 > 0){\r\n");
      out.write("\t\t\t\tthis.last += 1;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tgotoPage(i){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(this.current !== i){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tfor(var infoCount=0; infoCount<infowindow.length; infoCount++){//페이지 이동 전에 열려있는 infowindow창 전부 닫기\r\n");
      out.write("\t\t\t\t\tif(infowindow[infoCount] !== undefined){\r\n");
      out.write("\t\t\t\t\t\tinfowindow[infoCount].setMap(null);\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar min = (i-1) * 10;\r\n");
      out.write("\t\t\t\tvar max = min + 9;\r\n");
      out.write("\t\t\t\tif(this.list.length < max){\r\n");
      out.write("          \t\t\tmax = this.list.length;\r\n");
      out.write("          \t\t}\r\n");
      out.write("\t\t\t\tplacelistclicked = -1; //페이지 전환 시 클릭한 인덱스 값 초기화 \r\n");
      out.write("\t\t\t\tdisplayPlaces(this.list.slice(min, max+1));\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//검색시  자동으로 1번 마커를 표시\r\n");
      out.write("                daum.maps.event.trigger(markers[0], \"click\"); //강제로 클릭 발생\r\n");
      out.write("                displayInfowindow(markers[0], this.list[min].place_name, this.list[min].boardNo, this.list[min].thumbnail_name, this.list[min].title, this.list[min].contents, 0);   //처음엔 인포창 생성해야 함 (mouseover 이벤트로 발생되는게 아니기 때문에)\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tthis.current = i;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var j = 1; j<=this.last;j++){\r\n");
      out.write("\t\t\t\tif(j === this.current){\r\n");
      out.write("\t\t\t\t\t$(\"#pagination a\").eq(j-1).addClass(\"on\");\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse{\r\n");
      out.write("\t\t\t\t\t$(\"#pagination a\").eq(j-1).removeClass(\"on\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t}\r\n");
      out.write("\t// 검색 결과 목록과 마커를 표출하는 함수입니다\r\n");
      out.write("\tfunction displayPlaces(places) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t    var listEl = document.getElementById('placesList'), \r\n");
      out.write("\t    menuEl = document.getElementById('menu_wrap'),\r\n");
      out.write("\t    fragment = document.createDocumentFragment(), \r\n");
      out.write("\t    bounds = new daum.maps.LatLngBounds(), \r\n");
      out.write("\t    listStr = '';\r\n");
      out.write("\t    \r\n");
      out.write("\t    // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n");
      out.write("\t    removeAllChildNods(listEl);\r\n");
      out.write("\r\n");
      out.write("\t    // 지도에 표시되고 있는 마커를 제거합니다\r\n");
      out.write("\t    removeMarker();\r\n");
      out.write("\t    \r\n");
      out.write("\t    for ( var i=0; i<places.length; i++ ) {\r\n");
      out.write("\r\n");
      out.write("\t        // 마커를 생성하고 지도에 표시합니다\r\n");
      out.write("\t        var placePosition = new daum.maps.LatLng(places[i].y, places[i].x),\r\n");
      out.write("\t            marker = addMarker(placePosition, i), \r\n");
      out.write("\t            itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n");
      out.write("\r\n");
      out.write("\t        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n");
      out.write("\t        // LatLngBounds 객체에 좌표를 추가합니다\r\n");
      out.write("\t        bounds.extend(placePosition);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t        \r\n");
      out.write("\t        \r\n");
      out.write("\t        // 마커와 검색결과 항목에 mouseover 했을때\r\n");
      out.write("\t        // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("\t        // mouseout 했을 때는 인포윈도우를 닫습니다\r\n");
      out.write("\t        (function(marker, title, boardNo, thumbnail_name, titleContent, contents) {\r\n");
      out.write("\t               \r\n");
      out.write("\t            daum.maps.event.addListener(marker, 'click', function(){\r\n");
      out.write("\r\n");
      out.write("\t            \tfor(var i=0; i<places.length; i++){  //places배열에서 클릭한 마크의 title과 같은 정보의 주소와 전화번호를 뽑아내기 위해\r\n");
      out.write("\t            \t\tif(places[i].boardNo === boardNo){\r\n");
      out.write("\t            \t\t\t\r\n");
      out.write("\t            \t\t\t$(\"#placesList > .item\").eq(i).css(\"background\",\"#F99A86\");//list목록\r\n");
      out.write("\t            \t\t\tmap.setCenter(new daum.maps.LatLng(places[i].y, places[i].x));\r\n");
      out.write("\t            \t\t\t\r\n");
      out.write("\t            \t\t\t//addressDiv.value = $(this).find(\"> div > span\").first().text();\r\n");
      out.write("\t            \t\t\t//telDiv.value = $(this).find(\" .tel\").text();\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t            \t\t\tif(placelistclicked !== -1 && placelistclicked != i){ //초기값일땐 클릭을 안했으니\r\n");
      out.write("\t\t\t\t\t\t\t\tinfowindow[placelistclicked].setMap(null);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t            \t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tplacelistclicked = i;  //클릭했을때 인덱스 저장\r\n");
      out.write("\t            \t\t}\r\n");
      out.write("\t            \t\telse{\r\n");
      out.write("\t            \t\t\t$(\"#placesList > .item\").eq(i).css(\"background\",\"none\");\r\n");
      out.write("\t            \t\t\t          \t\t\t\r\n");
      out.write("\t            \t\t}         \r\n");
      out.write("\t            \t\t\r\n");
      out.write("\t            \t}  \r\n");
      out.write("\t            });  \r\n");
      out.write("\t            //.find(\" div.info\")\r\n");
      out.write("\t            daum.maps.event.addListener(marker, 'mouseover', function(){\r\n");
      out.write("\t            \t\r\n");
      out.write("\t            \tfor(var i=0; i<places.length; i++){\r\n");
      out.write("\t\t            \tif(places[i].boardNo === boardNo && placelistclicked !== i){\r\n");
      out.write("\t\t        \t\t\t$(\"#placesList > .item\").eq(i).css(\"background\",\"#FBE2E2\");//list목록\t\r\n");
      out.write("\t\t        \t\t\tdisplayInfowindow(marker, title, boardNo, thumbnail_name, titleContent, contents, i);\r\n");
      out.write("\t\t        \t\t}\t\r\n");
      out.write("\t            \t}\r\n");
      out.write("\t            }); \r\n");
      out.write("\r\n");
      out.write("\t            daum.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("\t            \t\r\n");
      out.write("\t                for(var i=0; i<places.length; i++){\r\n");
      out.write("\t\t                if(places[i].boardNo === boardNo && placelistclicked !== i){\r\n");
      out.write("\t\t        \t\t\t$(\"#placesList > .item\").eq(i).css(\"background\",\"none\");//list목록\r\n");
      out.write("\t\t        \t\t\tinfowindow[i].setMap(null);\r\n");
      out.write("\t\t \t\t\r\n");
      out.write("\t\t        \t\t}\r\n");
      out.write("\t                }\r\n");
      out.write("\t            });\r\n");
      out.write("\t            \r\n");
      out.write("\t            itemEl.onmousedown = function () {\r\n");
      out.write("\t    \t        daum.maps.event.trigger(marker, \"click\"); //강제로 클릭 발생\t       \r\n");
      out.write("\t            };\r\n");
      out.write("\r\n");
      out.write("\t            itemEl.onmouseover =  function () {                 \t\r\n");
      out.write("\t            \tdaum.maps.event.trigger(marker, \"mouseover\");  //강제로 마우스 오버 발생               \r\n");
      out.write("\t            };\r\n");
      out.write("\t            \r\n");
      out.write("\t            itemEl.onmouseout =  function () { \t\r\n");
      out.write("\t            \tdaum.maps.event.trigger(marker, \"mouseout\");  //강제로 마우스 아웃 발생    \r\n");
      out.write("\t            };\r\n");
      out.write("\t            \r\n");
      out.write("\t        })(marker, places[i].place_name, places[i].boardNo, places[i].thumbnail_name, places[i].title, places[i].contents);\r\n");
      out.write("\r\n");
      out.write("\t        fragment.appendChild(itemEl);\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t    // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n");
      out.write("\t    listEl.appendChild(fragment);\r\n");
      out.write("\t    menuEl.scrollTop = 0;\r\n");
      out.write("\r\n");
      out.write("\t    // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n");
      out.write("\t    map.setBounds(bounds);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 검색결과 항목을 Element로 반환하는 함수입니다\r\n");
      out.write("\tfunction getListItem(index, places) {\r\n");
      out.write("\r\n");
      out.write("\t    var el = document.createElement('li'),\r\n");
      out.write("\t    itemStr = '<span class=\"markerbg marker_' + (index+1) + '\"></span>' +\r\n");
      out.write("\t                '<div class=\"info\">' +\r\n");
      out.write("\t                '   <h5>' + places.place_name + '</h5>';\r\n");
      out.write("\t          \r\n");
      out.write("\r\n");
      out.write("\t    if (places.road_address_name) {\r\n");
      out.write("\t        itemStr += '    <span>' + places.road_address_name + '</span>' +\r\n");
      out.write("\t                    '   <span class=\"jibun gray\">' +  places.address_name  + '</span>';\r\n");
      out.write("\t    } else {\r\n");
      out.write("\t        itemStr += '    <span>' +  places.address_name  + '</span>'; \r\n");
      out.write("\t    }\r\n");
      out.write("\t                 \r\n");
      out.write("\t      itemStr += '  <span class=\"tel\">' + places.phone  + '</span>' +\r\n");
      out.write("\t                '</div>';           \r\n");
      out.write("\r\n");
      out.write("\t    el.innerHTML = itemStr;\r\n");
      out.write("\t    el.className = 'item';\r\n");
      out.write("\r\n");
      out.write("\t    return el;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar selectedMarker = null; //클릭한 마커를 담을 변수\r\n");
      out.write("\tvar MARKER_WIDTH = 33, // 기본, 클릭 마커의 너비\r\n");
      out.write("\t\tMARKER_HEIGHT = 36, // 기본, 클릭 마커의 높이\r\n");
      out.write("\t\tOFFSET_X = 12, // 기본, 클릭 마커의 기준 X좌표\r\n");
      out.write("\t\tOFFSET_Y = MARKER_HEIGHT, // 기본, 클릭 마커의 기준 Y좌표\r\n");
      out.write("\t\tOVER_MARKER_WIDTH = 45, // 오버 마커의 너비\r\n");
      out.write("\t\tOVER_MARKER_HEIGHT = 42, // 오버 마커의 높이\r\n");
      out.write("\t\tOVER_OFFSET_X = 16, // 오버 마커의 기준 X좌표\r\n");
      out.write("\t\tOVER_OFFSET_Y = OVER_MARKER_HEIGHT, // 오버 마커의 기준 Y좌표\r\n");
      out.write("\t\tSPRITE_MARKER_URL = 'http://t1.daumcdn.net/localimg/localimages/07/2012/img/marker_normal.png', // 스프라이트 마커 이미지 URL\r\n");
      out.write("\t\tSPRITE_WIDTH = 644, // 스프라이트 이미지 너비\r\n");
      out.write("\t\tSPRITE_HEIGHT = 946, // 스프라이트 이미지 높이\r\n");
      out.write("\t\tSPRITE_GAP = 10; // 스프라이트 이미지에서 마커간 간격\r\n");
      out.write("\tvar markerSize = new daum.maps.Size(MARKER_WIDTH, MARKER_HEIGHT), // 기본, 클릭 마커의 크기\r\n");
      out.write("\t\tmarkerOffset = new daum.maps.Point(OFFSET_X, OFFSET_Y), // 기본, 클릭 마커의 기준좌표\r\n");
      out.write("\t\toverMarkerSize = new daum.maps.Size(50, 50), // 오버 마커의 크기\r\n");
      out.write("\t\toverMarkerOffset = new daum.maps.Point(OVER_OFFSET_X, 48), // 오버 마커의 기준 좌표\r\n");
      out.write("\t\tspriteImageSize = new daum.maps.Size(SPRITE_WIDTH, SPRITE_HEIGHT); // 스프라이트 이미지의 크기\r\n");
      out.write("\t// 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n");
      out.write("\tfunction addMarker(position, i) {\r\n");
      out.write("\t\tvar gapX = (MARKER_WIDTH + SPRITE_GAP), // 스프라이트 이미지에서 마커로 사용할 이미지 X좌표 간격 값\r\n");
      out.write("\t    originY = (46 * i) + SPRITE_GAP, // 스프라이트 이미지에서 기본, 클릭 마커로 사용할 Y좌표 값\r\n");
      out.write("\t    overOriginY = (OVER_MARKER_HEIGHT + SPRITE_GAP) * i, // 스프라이트 이미지에서 오버 마커로 사용할 Y좌표 값\r\n");
      out.write("\t    normalOrigin = new daum.maps.Point(53, originY-2), // 스프라이트 이미지에서 기본 마커로 사용할 영역의 좌상단 좌표\r\n");
      out.write("\t    clickOrigin = new daum.maps.Point(138, originY-2), // 스프라이트 이미지에서 마우스오버 마커로 사용할 영역의 좌상단 좌표\r\n");
      out.write("\t    overOrigin = new daum.maps.Point(316, overOriginY); // 스프라이트 이미지에서 클릭 마커로 사용할 영역의 좌상단 좌표\r\n");
      out.write("\t    \r\n");
      out.write("\t    // 기본 마커이미지, 오버 마커이미지, 클릭 마커이미지를 생성합니다\r\n");
      out.write("\t    var normalImage = createMarkerImage(markerSize, markerOffset, normalOrigin),\r\n");
      out.write("\t        overImage = createMarkerImage(overMarkerSize, overMarkerOffset, overOrigin),\r\n");
      out.write("\t        clickImage = createMarkerImage(markerSize, markerOffset, clickOrigin);\r\n");
      out.write("\t    \r\n");
      out.write("\t    // 마커를 생성하고 이미지는 기본 마커 이미지를 사용합니다\r\n");
      out.write("\t    var marker = new daum.maps.Marker({\r\n");
      out.write("\t        position: position,\r\n");
      out.write("\t        image: normalImage\r\n");
      out.write("\t    });\r\n");
      out.write("\t    \r\n");
      out.write("\r\n");
      out.write("\t    \r\n");
      out.write("\t\t// 마커 객체에 마커아이디와 마커의 기본 이미지를 추가합니다\r\n");
      out.write("\t    marker.normalImage = normalImage;\r\n");
      out.write("\r\n");
      out.write("\t    // 마커에 mouseover 이벤트를 등록합니다\r\n");
      out.write("\t    daum.maps.event.addListener(marker, 'mouseover', function() {\r\n");
      out.write("\r\n");
      out.write("\t        // 클릭된 마커가 없고, mouseover된 마커가 클릭된 마커가 아니면\r\n");
      out.write("\t        // 마커의 이미지를 오버 이미지로 변경합니다\r\n");
      out.write("\t        if (!selectedMarker || selectedMarker !== marker) {\r\n");
      out.write("\t            marker.setImage(overImage);\r\n");
      out.write("\t        }\r\n");
      out.write("\t    });\r\n");
      out.write("\r\n");
      out.write("\t    // 마커에 mouseout 이벤트를 등록합니다\r\n");
      out.write("\t    daum.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("\r\n");
      out.write("\t        // 클릭된 마커가 없고, mouseout된 마커가 클릭된 마커가 아니면\r\n");
      out.write("\t        // 마커의 이미지를 기본 이미지로 변경합니다\r\n");
      out.write("\t        if (!selectedMarker || selectedMarker !== marker) {\r\n");
      out.write("\t            marker.setImage(normalImage);\r\n");
      out.write("\t        }\r\n");
      out.write("\t    }); \r\n");
      out.write("\r\n");
      out.write("\t    // 마커에 click 이벤트를 등록합니다\r\n");
      out.write("\t    daum.maps.event.addListener(marker, 'click', function() {\r\n");
      out.write("\r\n");
      out.write("\t        // 클릭된 마커가 없고, click 마커가 클릭된 마커가 아니면\r\n");
      out.write("\t        // 마커의 이미지를 클릭 이미지로 변경합니다\r\n");
      out.write("\t        if (!selectedMarker || selectedMarker !== marker) {\r\n");
      out.write("\r\n");
      out.write("\t            // 클릭된 마커 객체가 null이 아니면\r\n");
      out.write("\t            // 클릭된 마커의 이미지를 기본 이미지로 변경하고\r\n");
      out.write("\t            !!selectedMarker && selectedMarker.setImage(selectedMarker.normalImage);\r\n");
      out.write("\r\n");
      out.write("\t            // 현재 클릭된 마커의 이미지는 클릭 이미지로 변경합니다\r\n");
      out.write("\t            marker.setImage(clickImage);\r\n");
      out.write("\t        }\r\n");
      out.write("\r\n");
      out.write("\t        // 클릭된 마커를 현재 클릭된 마커 객체로 설정합니다\r\n");
      out.write("\t        selectedMarker = marker;\r\n");
      out.write("\t    });\r\n");
      out.write("\t    \r\n");
      out.write("\t    \r\n");
      out.write("\r\n");
      out.write("\t    marker.setMap(map);\t   // 지도 위에 마커를 표출합니다\r\n");
      out.write("\t    markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n");
      out.write("\t    \r\n");
      out.write("\t    return marker;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//MakrerImage 객체를 생성하여 반환하는 함수입니다\r\n");
      out.write("\tfunction createMarkerImage(markerSize, offset, spriteOrigin) {\r\n");
      out.write("\t    var markerImage = new daum.maps.MarkerImage(\r\n");
      out.write("\t        SPRITE_MARKER_URL, // 스프라이트 마커 이미지 URL\r\n");
      out.write("\t        markerSize, // 마커의 크기\r\n");
      out.write("\t        {\r\n");
      out.write("\t            offset: offset, // 마커 이미지에서의 기준 좌표\r\n");
      out.write("\t            spriteOrigin: spriteOrigin, // 스트라이프 이미지 중 사용할 영역의 좌상단 좌표\r\n");
      out.write("\t            spriteSize: spriteImageSize // 스프라이트 이미지의 크기\r\n");
      out.write("\t        }\r\n");
      out.write("\t    );\r\n");
      out.write("\t    \r\n");
      out.write("\t    return markerImage;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n");
      out.write("\tfunction removeMarker() {\r\n");
      out.write("\t    for ( var i = 0; i < markers.length; i++ ) {\r\n");
      out.write("\t        markers[i].setMap(null);\r\n");
      out.write("\t    }   \r\n");
      out.write("\t    markers = [];\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n");
      out.write("\tfunction displayPagination(pagination) {\r\n");
      out.write("\t    var paginationEl = document.getElementById('pagination'),\r\n");
      out.write("\t        fragment = document.createDocumentFragment(),\r\n");
      out.write("\t        i; \r\n");
      out.write("\t\t\r\n");
      out.write("\t    // 기존에 추가된 페이지번호를 삭제합니다\r\n");
      out.write("\t    while (paginationEl.hasChildNodes()) {\r\n");
      out.write("\t        paginationEl.removeChild (paginationEl.lastChild);\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("\t    for (i=1; i<=pagination.last; i++) {\r\n");
      out.write("\t        var el = document.createElement('a');\r\n");
      out.write("\t        el.href = \"#\";\r\n");
      out.write("\t        el.innerHTML = i;\r\n");
      out.write("\r\n");
      out.write("\t       \tif(pagination.current === i){\r\n");
      out.write("\t        \tel.className = 'on';\r\n");
      out.write("\t       \t}\r\n");
      out.write("\t        el.onclick = (function(i) {\r\n");
      out.write("\t        \treturn function() {\r\n");
      out.write("\t            \tpagination.gotoPage(i);\r\n");
      out.write("\t           \t}\r\n");
      out.write("\t        })(i);\r\n");
      out.write("\t      \r\n");
      out.write("\r\n");
      out.write("\t        fragment.appendChild(el);\r\n");
      out.write("\t    }\r\n");
      out.write("\t    paginationEl.appendChild(fragment);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/*<div class=\"title\"><div class=\"body\"><div class=\"desc\"></div></div></div>*/\r\n");
      out.write("\tfunction displayInfowindow(marker, title, boardNo, thumbnail_name, titleContent, contents, index) {   //윈도우인포(커스텀 오버레이) 꾸미기\r\n");
      out.write("\t\tconsole.log(thumbnail_name);\r\n");
      out.write("\t\tif(thumbnail_name === \"undefined\"){  //해당 게시물에 썸네일이 없을때\r\n");
      out.write("\t\t\tthumbnail_name = '/mimi/resources/images/logo/default_logo.png';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse{\r\n");
      out.write("\t\t\tthumbnail_name = '");
      out.print(request.getContextPath());
      out.write("/resources/files/userboard/' + thumbnail_name;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar content = '<div class=\"wrap\">' + \r\n");
      out.write("        '    <div class=\"infowin\">' + \r\n");
      out.write("        '        <div class=\"title\">' + \r\n");
      out.write("        \t\t\t\t\ttitle\t  + \r\n");
      out.write("        '        </div>' + \r\n");
      out.write("        '        <div class=\"body\">' + \r\n");
      out.write("        '\t\t\t<a target=\"_blank\" href=\"/mimi/userboarddetailview?bnum=' + boardNo + '\">' + \r\n");
      out.write("        '            <div class=\"img img-thumb img-mover\">' +\r\n");
      out.write("        '                <img src=\"' + thumbnail_name + '\" width=\"73\" height=\"70\">' +\r\n");
      out.write("        '           </div></a>' + \r\n");
      out.write("        '            <div class=\"desc\">' + \r\n");
      out.write("        '                <div class=\"ellipsis\">' + titleContent + '</div>' +   \r\n");
      out.write("        '                <div class=\"imgcontents-box\" >' + contents + '</div>' + \r\n");
      out.write("        '            </div>' + \t\r\n");
      out.write("        '        </div>' + \r\n");
      out.write("        '    </div>' +    \r\n");
      out.write("        '</div>';\r\n");
      out.write("        \r\n");
      out.write("\t    //var content = '<div class=\"wrap\"><div  class=\"infowin\"><a target=\"_blank\" href=\"/mimi/userboarddetailview?bnum=' + boardNo +'\"><div class=\"desc\" style=\"color:white\">' + title + '</div></a></div></div>';\r\n");
      out.write("\t\t\r\n");
      out.write("\t    //인포윈도우를 담는 배열 선언\r\n");
      out.write("\t    infowin = new daum.maps.CustomOverlay({\r\n");
      out.write("\t\t\tcontent: content,\r\n");
      out.write("\t\t\tmap: map,\r\n");
      out.write("\t\t\tposition: marker.getPosition()\r\n");
      out.write("\t\t});\r\n");
      out.write("\t    //infowin.setContent(content);   \r\n");
      out.write("\t    //infowin.open(map, marker);\r\n");
      out.write("\t    //infowin.setMap(map);\r\n");
      out.write("\t \tinfowindow[index] = infowin;\r\n");
      out.write("\t    \r\n");
      out.write("\t    \r\n");
      out.write("\t}\r\n");
      out.write("\t // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n");
      out.write("\tfunction removeAllChildNods(el) {   \r\n");
      out.write("\t    while (el.hasChildNodes()) {\r\n");
      out.write("\t        el.removeChild (el.lastChild);\r\n");
      out.write("\t    }\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction searchAddrFromCoords(coords, callback) { //좌표로 행정동 주소 정보를 요청\r\n");
      out.write("\t    // 좌표로 행정동 주소 정보를 요청합니다\r\n");
      out.write("\t    geocoder.coord2RegionCode(coords.longitude, coords.latitude, callback);         \r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//오른쪽 상단 텍스트에 현재 위치 좌표에 대한 주소정보를 표출하는 함수\r\n");
      out.write("\tfunction displayCenterInfo(result, status) {\r\n");
      out.write("\t    if (status === daum.maps.services.Status.OK) {\t\t\t\r\n");
      out.write("\t        for(var i = 0; i < result.length; i++) {\r\n");
      out.write("\t            // 행정동의 region_type 값은 'H' 이므로\r\n");
      out.write("\t            if (result[i].region_type === 'H') {\r\n");
      out.write("\t            \t$(\"#currentposition\").html(result[i].address_name);\t           \t\t\r\n");
      out.write("\t                break;\r\n");
      out.write("\t            }\r\n");
      out.write("\t        }\r\n");
      out.write("\t    }    \r\n");
      out.write("\t} \r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- <title>Insert title here</title> -->\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t.header-and-footer{\r\n");
      out.write("\t\tpadding-top: 15px;\r\n");
      out.write("\t\tpadding-bottom: 15px; \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t.custom-footer{\r\n");
      out.write("\tmin-width:1150px; /* 추가, 게시판 너비 맞춤*/\r\n");
      out.write("\t\tmargin-top: 50px;\r\n");
      out.write("\t\tmargin-bottom: 0px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.footer{\r\n");
      out.write("\t\t\r\n");
      out.write("\t\ttext-align:center;\r\n");
      out.write("\t\tmargin-top: 2px;\r\n");
      out.write("\t\tmargin-bottom: 2px;\r\n");
      out.write("\t\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\t<nav class=\"navbar navbar-default custom-footer header-and-footer\">\r\n");
      out.write("  \t\t<div class=\"container\">\r\n");
      out.write("   \t\t\t<p class=\"footer\">이용약관 개인정보처리방침 책임의 한계와 법적고지 고객센터</p>\r\n");
      out.write("   \t\t\t<p class=\"footer\">tel : 010-0000-0000 fax: 000-0000-0000</p>\r\n");
      out.write("   \t\t\t<p class=\"footer\">Copyright MIMI Corp.All Rights Reserved.</p>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("\t</nav>");
      out.write(' ');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/mimi/resources/js/bootstrap.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("<!-- 바디 태그 끝 -->\r\n");
      out.write("</html>\t");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
